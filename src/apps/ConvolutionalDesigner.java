/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apps;

import classes.codingSchemes.Convolutional;
import classes.helpers.ArrayFunctions;

/**
 *
 * @author chidi
 */
public class ConvolutionalDesigner extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form Main
     */
    public ConvolutionalDesigner() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        helpDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        encoderTypeTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        designButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        upRegistersButton = new javax.swing.JButton();
        downRegistersButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        upOutputsButton = new javax.swing.JButton();
        downOutputsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        encodingTypeTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputBitsTextField = new javax.swing.JTextField();
        encodeButton = new javax.swing.JButton();
        resetEncoderButton = new javax.swing.JButton();
        encodingTypeSelectButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        decodingTypeTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        receivedBitsTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        resetDecoderButton = new javax.swing.JButton();
        decodeButton = new javax.swing.JButton();
        decodingTypeSelectButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();

        helpDialog.setMinimumSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout helpDialogLayout = new javax.swing.GroupLayout(helpDialog.getContentPane());
        helpDialog.getContentPane().setLayout(helpDialogLayout);
        helpDialogLayout.setHorizontalGroup(
            helpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        helpDialogLayout.setVerticalGroup(
            helpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONVOLUTIONAL CODEC");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(239, 228, 176));

        jTable1.setFont(jTable1.getFont().deriveFont(jTable1.getFont().getSize()+3f));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"O/P 1", null, null, null},
                {"O/P 2", null, null, null}
            },
            new String [] {
                "", "I/P 1", "I/P 2", "I/P 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setRowHeight(24);
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getSize()+3f));
        jLabel5.setText("Encoder type");

        encoderTypeTextField.setEditable(false);
        encoderTypeTextField.setFont(encoderTypeTextField.getFont().deriveFont(encoderTypeTextField.getFont().getSize()+3f));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel6.setText("Convolutional designer");

        designButton.setFont(designButton.getFont().deriveFont(designButton.getFont().getSize()+3f));
        designButton.setText("Design");
        designButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel4.setText("Inputs");

        upRegistersButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        upRegistersButton.setText("+");
        upRegistersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upRegistersButtonActionPerformed(evt);
            }
        });

        downRegistersButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        downRegistersButton.setText("-");
        downRegistersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downRegistersButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel13.setText("Outputs");

        upOutputsButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        upOutputsButton.setText("+");
        upOutputsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upOutputsButtonActionPerformed(evt);
            }
        });

        downOutputsButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        downOutputsButton.setText("-");
        downOutputsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downOutputsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upRegistersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(downRegistersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upOutputsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(downOutputsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(upOutputsButton)
                        .addComponent(downOutputsButton))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(upRegistersButton)
                        .addComponent(downRegistersButton)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(designButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(encoderTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(designButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(encoderTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(239, 228, 176));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel7.setText("Convolutional encoder");

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+3f));
        jLabel1.setText("Encoder type");

        encodingTypeTextField.setFont(encodingTypeTextField.getFont().deriveFont(encodingTypeTextField.getFont().getSize()+3f));

        jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getSize()+3f));
        jLabel8.setText("Input bits");

        inputBitsTextField.setFont(inputBitsTextField.getFont().deriveFont(inputBitsTextField.getFont().getSize()+3f));

        encodeButton.setFont(encodeButton.getFont().deriveFont(encodeButton.getFont().getSize()+3f));
        encodeButton.setText("Encode");
        encodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encodeButtonActionPerformed(evt);
            }
        });

        resetEncoderButton.setFont(resetEncoderButton.getFont().deriveFont(resetEncoderButton.getFont().getSize()+3f));
        resetEncoderButton.setText("Reset");
        resetEncoderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetEncoderButtonActionPerformed(evt);
            }
        });

        encodingTypeSelectButton.setFont(encodingTypeSelectButton.getFont().deriveFont(encodingTypeSelectButton.getFont().getSize()+3f));
        encodingTypeSelectButton.setText("Select");
        encodingTypeSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encodingTypeSelectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputBitsTextField)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(encodingTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(encodingTypeSelectButton))))
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(encodeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetEncoderButton)))
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(encodingTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encodingTypeSelectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputBitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encodeButton)
                    .addComponent(resetEncoderButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(239, 228, 176));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel9.setText("Convolutional decoder");

        decodingTypeTextField.setFont(decodingTypeTextField.getFont().deriveFont(decodingTypeTextField.getFont().getSize()+3f));

        jLabel10.setFont(jLabel10.getFont().deriveFont(jLabel10.getFont().getSize()+3f));
        jLabel10.setText("Encoder type");

        receivedBitsTextField.setFont(receivedBitsTextField.getFont().deriveFont(receivedBitsTextField.getFont().getSize()+3f));
        receivedBitsTextField.setToolTipText("");

        jLabel11.setFont(jLabel11.getFont().deriveFont(jLabel11.getFont().getSize()+3f));
        jLabel11.setText("Received bits");

        resetDecoderButton.setFont(resetDecoderButton.getFont().deriveFont(resetDecoderButton.getFont().getSize()+3f));
        resetDecoderButton.setText("Reset");
        resetDecoderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetDecoderButtonActionPerformed(evt);
            }
        });

        decodeButton.setFont(decodeButton.getFont().deriveFont(decodeButton.getFont().getSize()+3f));
        decodeButton.setText("Decode");
        decodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeButtonActionPerformed(evt);
            }
        });

        decodingTypeSelectButton.setFont(decodingTypeSelectButton.getFont().deriveFont(decodingTypeSelectButton.getFont().getSize()+3f));
        decodingTypeSelectButton.setText("Select");
        decodingTypeSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodingTypeSelectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(decodeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(resetDecoderButton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receivedBitsTextField)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(decodingTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(decodingTypeSelectButton)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(decodingTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decodingTypeSelectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(receivedBitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decodeButton)
                    .addComponent(resetDecoderButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(239, 228, 176));

        consoleTextArea.setEditable(false);
        consoleTextArea.setBackground(new java.awt.Color(80, 80, 80));
        consoleTextArea.setColumns(20);
        consoleTextArea.setFont(consoleTextArea.getFont().deriveFont(consoleTextArea.getFont().getSize()+3f));
        consoleTextArea.setForeground(new java.awt.Color(254, 254, 254));
        consoleTextArea.setRows(5);
        consoleTextArea.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane3.setViewportView(consoleTextArea);

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel12.setText("Output");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu4.setText("Help");

        helpMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        helpMenuItem.setText("Help");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(helpMenuItem);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetEncoderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetEncoderButtonActionPerformed
        try {
            encoder = new Convolutional(encodingTypeTextField.getText());

            print("Resetting encoder...\nEncoder type:\t" + encoder.getSymbol());
        } catch (NumberFormatException e) {
            print("ERROR: Invalid encoder type. Please enter a valid encoder type and try again.");
        }
    }//GEN-LAST:event_resetEncoderButtonActionPerformed

    private void upRegistersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upRegistersButtonActionPerformed
        registers++;
        drawTable();
        downRegistersButton.setEnabled(true);
        
        if (registers == 4) {
            upRegistersButton.setEnabled(false);
        }
    }//GEN-LAST:event_upRegistersButtonActionPerformed

    private void downRegistersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downRegistersButtonActionPerformed
        registers--;
        drawTable();
        upRegistersButton.setEnabled(true);
        
        if (registers == 2) {
            downRegistersButton.setEnabled(false);
        }
    }//GEN-LAST:event_downRegistersButtonActionPerformed

    private void upOutputsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upOutputsButtonActionPerformed
        outputs++;
        drawTable();
        downOutputsButton.setEnabled(true);
        
        if (outputs == 4) {
            upOutputsButton.setEnabled(false);
        }
    }//GEN-LAST:event_upOutputsButtonActionPerformed

    private void downOutputsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downOutputsButtonActionPerformed
        outputs--;
        drawTable();
        upOutputsButton.setEnabled(true);
        
        if (outputs == 2) {
            downOutputsButton.setEnabled(false);
        }
    }//GEN-LAST:event_downOutputsButtonActionPerformed

    private void designButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designButtonActionPerformed
        convolutional = new Convolutional(getOutputMatrix());

        print("New encoder design\nEncoder type:\t" + convolutional.getSymbol());
        encoderTypeTextField.setText(convolutional.getSymbol());
    }//GEN-LAST:event_designButtonActionPerformed

    private void encodingTypeSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encodingTypeSelectButtonActionPerformed
        try {
            encoder = new Convolutional(encodingTypeTextField.getText());

            print("New encoding process\nEncoder type:\t" + encoder.getSymbol());
        } catch (NumberFormatException e) {
            print("ERROR: Invalid encoder type. Please enter a valid encoder type and try again.");
        }
    }//GEN-LAST:event_encodingTypeSelectButtonActionPerformed

    private void encodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encodeButtonActionPerformed
        try {
            String[] bits = inputBitsTextField.getText().split("");
            int[] inputbits = new int[bits.length];

            for (int i = 0; i < bits.length; i++) {
                inputbits[i] = Integer.parseInt(bits[i]);
            }

            int[][] output = encoder.sendInputStream(inputbits);

            print("Encoding...\nInput:\t" + 
                    ArrayFunctions.singlePrint(inputbits) + 
                    "\nOutput:\t" +
                    ArrayFunctions.doublePrint(output)
            );
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            print("ERROR: Invalid message bit sequence. Please try again.");
        }
    }//GEN-LAST:event_encodeButtonActionPerformed

    private void decodingTypeSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodingTypeSelectButtonActionPerformed
        try {
            decoder = new Convolutional(decodingTypeTextField.getText());
            print("New decoding process\nEncoder type:\t" + decoder.getSymbol());
        } catch (NumberFormatException e) {
            print("ERROR: Invalid decoder type. Please enter a valid encoder type and try again.");
        }
    }//GEN-LAST:event_decodingTypeSelectButtonActionPerformed

    private void decodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodeButtonActionPerformed
        try {
            String[] bits = receivedBitsTextField.getText().split(" ");
            int[][] outputbits = new int[bits.length][decoder.num_outputs()];
            
            for (int i = 0; i < bits.length; i++) {
                String[] singbits = bits[i].split("");
                for (int j = 0; j < singbits.length; j++) {
                    outputbits[i][j] = Integer.parseInt(singbits[j]);
                }
            }
            
            int[] received = decoder.decode(outputbits, false);
            int[][] corrected = decoder.correct(outputbits);
            
            print("Encoding...\nReceived:\t" +
                    ArrayFunctions.doublePrint(outputbits) + 
                    "\nCorrected:\t" + 
                    ArrayFunctions.doublePrint(corrected) + 
                    "\nDecoded:\t" + 
                    ArrayFunctions.singlePrint(received)
            );
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            print("ERROR: Invalid received bit sequence. Please try again.");
        } catch (OutOfMemoryError e) {
            print("ERROR: Out of memory. Please input a shorter received sequence.");
        }
    }//GEN-LAST:event_decodeButtonActionPerformed

    private void resetDecoderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetDecoderButtonActionPerformed
        try {
            decoder = new Convolutional(decodingTypeTextField.getText());

            print("Resetting decoder...\nDecoder type:\t" + decoder.getSymbol());
        } catch (NumberFormatException e) {
            print("ERROR: Invalid decoder type. Please enter a valid decoder type and try again.");
        }
    }//GEN-LAST:event_resetDecoderButtonActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        helpDialog.setVisible(true);
    }//GEN-LAST:event_helpMenuItemActionPerformed
        
    private int[][] getOutputMatrix() {
        int[][] ops = new int[jTable1.getRowCount()][jTable1.getColumnCount()-1];
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            for (int j = 0; j < jTable1.getColumnCount()-1; j++) {
                ops[i][j] = (jTable1.getValueAt(i, j+1) == Boolean.TRUE) ? 1 : 0;
            }
        }
        
        return ops;
    }
    
    private void drawTable() {
        Object [][] model = new Object [outputs][registers+2];
        
        for (int i = 0; i < outputs; i++) {
            model[i][0] = "O/P " + (i+1);
            
            for (int j = 1; j < registers+2; j++) {
                model[i][j] = null;
            }
        }
        
        String [] header = new String [registers+2];
        header[0] = "";
        
        Class[] main_types = new Class[registers+2];
        main_types[0] = java.lang.String.class;
        
        boolean[] edits = new boolean[registers+2];
        edits[0] = false;
        
        for (int i = 1; i < registers+2; i++) {
            main_types[i] = java.lang.Boolean.class;
            edits[i] = true;
            
            if (i >= 1) {
                header[i] = "I/P " + i;
            }
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            model,
            header
        ) {
            Class[] types = main_types;
            boolean[] canEdit = edits;

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }
    
    private void print(String output) {
        consoleTextArea.setText(consoleTextArea.getText() + output + "\n\n");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvolutionalDesigner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvolutionalDesigner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvolutionalDesigner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvolutionalDesigner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ConvolutionalDesigner().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JButton decodeButton;
    private javax.swing.JButton decodingTypeSelectButton;
    private javax.swing.JTextField decodingTypeTextField;
    private javax.swing.JButton designButton;
    private javax.swing.JButton downOutputsButton;
    private javax.swing.JButton downRegistersButton;
    private javax.swing.JButton encodeButton;
    private javax.swing.JTextField encoderTypeTextField;
    private javax.swing.JButton encodingTypeSelectButton;
    private javax.swing.JTextField encodingTypeTextField;
    private javax.swing.JDialog helpDialog;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JTextField inputBitsTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField receivedBitsTextField;
    private javax.swing.JButton resetDecoderButton;
    private javax.swing.JButton resetEncoderButton;
    private javax.swing.JButton upOutputsButton;
    private javax.swing.JButton upRegistersButton;
    // End of variables declaration//GEN-END:variables
    private Convolutional convolutional;
    private Convolutional encoder;
    private Convolutional decoder;
    private int registers = 2;
    private int outputs = 2;
}
