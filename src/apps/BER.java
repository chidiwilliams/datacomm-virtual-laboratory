/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apps;

import classes.charts.LineChart;
import classes.filters.LPF;
import classes.helpers.Sampler;
import classes.modulations.BPSK;
import classes.modulations.QPSK;
import classes.signals.WaveSignal;
import classes.signals.WaveSignalType;
import java.util.Arrays;
import simulator.classes.impairments.AWGN;
import simulator.classes.libraries.ArrayFunctions;
import simulator.classes.signals.CarrierSignal;
import simulator.classes.signals.Signal;

/**
 *
 * @author HP
 */
public class BER extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form BER
     */
    public BER() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextField1.setText("262144");

        jLabel1.setText("Number of samples");

        jTextField2.setText("1024");

        jLabel2.setText("Number of bits");

        jTextField3.setText("1");

        jLabel3.setText("Signal power");

        jTextField5.setText("1");

        jLabel5.setText("Noise power");

        jTextField6.setText("1024");

        jLabel6.setText("Cutoff frequency");

        jTextField8.setText("150");

        jLabel8.setText("Number of filter taps");

        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        consoleTextArea.setEditable(false);
        consoleTextArea.setColumns(20);
        consoleTextArea.setForeground(new java.awt.Color(51, 51, 51));
        consoleTextArea.setRows(5);
        consoleTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(consoleTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3))
                                    .addGap(69, 69, 69)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int num_samples = Integer.parseInt(jTextField1.getText());
        int num_bits = Integer.parseInt(jTextField2.getText());
        double signal_power = Double.parseDouble(jTextField3.getText());
        double noise_power = Double.parseDouble(jTextField5.getText());
        int coff = Integer.parseInt(jTextField6.getText());
        int taps = Integer.parseInt(jTextField8.getText());
        
        Signal input = new Signal(num_bits);
        for (int i = 0; i < input.getLength(); i++) {
            input.setSignalValue(i, Math.rint(Math.random()));
        }
        
        double[] samples = new double[num_samples];
        for (int i = 0; i < num_samples; i++) {
            samples[i] = i + 1;
        }
        
        Signal bb = new Signal(num_samples);
        bb.setSignal(new Sampler().sample(input.getSignal(), num_samples));
        
        CarrierSignal carr = new CarrierSignal(num_samples, num_bits);
        
        QPSK modulation = new QPSK(
                bb.getSignal(), 
                new WaveSignal(WaveSignalType.SIN, num_samples, num_bits, 0).getSignal(), 
                new WaveSignal(WaveSignalType.COS, num_samples, num_bits, 0).getSignal()
        );
        
        Signal modulated = new Signal(num_samples);
        
        for (int i = 0; i < modulated.getLength(); i++) {
            modulated.setSignalValue(i, modulation.getModulated()[i] * signal_power);
        }
        
        Signal noise = new Signal(num_samples);
        noise.setSignal(new AWGN().generateNoise(noise_power, num_samples));
        
        Signal recv = new Signal(num_samples);
        recv.setSignal(
                ArrayFunctions.add(modulated.getSignal(), noise.getSignal())
        );
        
        Signal demodulated = new Signal(num_samples);
        demodulated.setSignal(modulation.getDemodulated(recv.getSignal()));
        
        LPF lpFilter = new LPF(num_samples, coff, taps, demodulated.getSignal());
        
        Signal filtered = new Signal(num_samples);
        filtered.setSignal(lpFilter.getFiltered());
        
        Signal thresh = new Signal(num_bits);
        thresh.setSignal(filtered.getThresholds(num_bits));
        
        ipgraph.sendData("f", samples, bb.getSignal(), "Samples", "Amplitude", 0, 0, 0);
        ipgraph.pack();
        
        opgraph.sendData("f", samples, filtered.getSignal(), "Samples", "Amplitude", 0, 0, 0);
        opgraph.pack();
        
        print("Input: " + Arrays.toString(input.getSignal()));
        print("Output: " + Arrays.toString(thresh.getSignal()));
        
        int errors = 0;
        for (int i = 0; i < input.getLength(); i++) {
            if (input.getSignalValue(i) != thresh.getSignalValue(i)) {
                errors++;
            }
        }
        
        double ber = errors * Math.pow(input.getLength(), -1);
        
        print("Number of errors: " + String.valueOf(errors));
        print("BER: " + String.valueOf(ber));
        print("---------------");
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void print(String output) {
        consoleTextArea.setText(consoleTextArea.getText() + output + "\n\n");
    }
    
    public void drawCharts() {
        ipgraph = new LineChart("INPUT", 600, 320);
        ipgraph.setLocation(700, 0);
        ipgraph.setResizable(false);
        ipgraph.pack();
        ipgraph.setVisible(true);

        opgraph = new LineChart("OUTPUT", 600, 320);
        opgraph.setLocation(700, 400);
        opgraph.setResizable(false);
        opgraph.pack();
        opgraph.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {            
            BER ber = new BER();
            
            ber.setVisible(true);
            ber.drawCharts();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
    
    private static LineChart ipgraph;
    private static LineChart opgraph;
}
